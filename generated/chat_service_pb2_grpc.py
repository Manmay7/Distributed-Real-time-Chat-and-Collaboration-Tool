# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from generated import chat_service_pb2 as chat__service__pb2


class ChatServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Login = channel.unary_unary(
                '/chat.ChatService/Login',
                request_serializer=chat__service__pb2.LoginRequest.SerializeToString,
                response_deserializer=chat__service__pb2.LoginResponse.FromString,
                )
        self.Signup = channel.unary_unary(
                '/chat.ChatService/Signup',
                request_serializer=chat__service__pb2.SignupRequest.SerializeToString,
                response_deserializer=chat__service__pb2.SignupResponse.FromString,
                )
        self.Logout = channel.unary_unary(
                '/chat.ChatService/Logout',
                request_serializer=chat__service__pb2.LogoutRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.StreamMessages = channel.unary_stream(
                '/chat.ChatService/StreamMessages',
                request_serializer=chat__service__pb2.StreamRequest.SerializeToString,
                response_deserializer=chat__service__pb2.MessageEvent.FromString,
                )
        self.PostMessage = channel.unary_unary(
                '/chat.ChatService/PostMessage',
                request_serializer=chat__service__pb2.PostRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.GetMessages = channel.unary_unary(
                '/chat.ChatService/GetMessages',
                request_serializer=chat__service__pb2.GetRequest.SerializeToString,
                response_deserializer=chat__service__pb2.GetResponse.FromString,
                )
        self.SendDirectMessage = channel.unary_unary(
                '/chat.ChatService/SendDirectMessage',
                request_serializer=chat__service__pb2.DirectMessageRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.GetDirectMessages = channel.unary_unary(
                '/chat.ChatService/GetDirectMessages',
                request_serializer=chat__service__pb2.GetDirectMessagesRequest.SerializeToString,
                response_deserializer=chat__service__pb2.DirectMessageResponse.FromString,
                )
        self.ListConversations = channel.unary_unary(
                '/chat.ChatService/ListConversations',
                request_serializer=chat__service__pb2.ListConversationsRequest.SerializeToString,
                response_deserializer=chat__service__pb2.ConversationsResponse.FromString,
                )
        self.CreateChannel = channel.unary_unary(
                '/chat.ChatService/CreateChannel',
                request_serializer=chat__service__pb2.CreateChannelRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.JoinChannel = channel.unary_unary(
                '/chat.ChatService/JoinChannel',
                request_serializer=chat__service__pb2.JoinChannelRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.LeaveChannel = channel.unary_unary(
                '/chat.ChatService/LeaveChannel',
                request_serializer=chat__service__pb2.LeaveChannelRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.GetChannels = channel.unary_unary(
                '/chat.ChatService/GetChannels',
                request_serializer=chat__service__pb2.GetChannelsRequest.SerializeToString,
                response_deserializer=chat__service__pb2.ChannelListResponse.FromString,
                )
        self.GetOnlineUsers = channel.unary_unary(
                '/chat.ChatService/GetOnlineUsers',
                request_serializer=chat__service__pb2.GetOnlineUsersRequest.SerializeToString,
                response_deserializer=chat__service__pb2.UserListResponse.FromString,
                )
        self.UpdatePresence = channel.unary_unary(
                '/chat.ChatService/UpdatePresence',
                request_serializer=chat__service__pb2.UpdatePresenceRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.UploadFile = channel.unary_unary(
                '/chat.ChatService/UploadFile',
                request_serializer=chat__service__pb2.FileUploadRequest.SerializeToString,
                response_deserializer=chat__service__pb2.FileUploadResponse.FromString,
                )
        self.DownloadFile = channel.unary_unary(
                '/chat.ChatService/DownloadFile',
                request_serializer=chat__service__pb2.FileDownloadRequest.SerializeToString,
                response_deserializer=chat__service__pb2.FileResponse.FromString,
                )
        self.ListFiles = channel.unary_unary(
                '/chat.ChatService/ListFiles',
                request_serializer=chat__service__pb2.ListFilesRequest.SerializeToString,
                response_deserializer=chat__service__pb2.FileListResponse.FromString,
                )
        self.ManageUser = channel.unary_unary(
                '/chat.ChatService/ManageUser',
                request_serializer=chat__service__pb2.ManageUserRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )
        self.ManageChannel = channel.unary_unary(
                '/chat.ChatService/ManageChannel',
                request_serializer=chat__service__pb2.ManageChannelRequest.SerializeToString,
                response_deserializer=chat__service__pb2.StatusResponse.FromString,
                )


class ChatServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Login(self, request, context):
        """Authentication
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Signup(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Logout(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StreamMessages(self, request, context):
        """Real-time messaging - streaming
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostMessage(self, request, context):
        """Messaging
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendDirectMessage(self, request, context):
        """Direct Messages
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDirectMessages(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListConversations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateChannel(self, request, context):
        """Channel Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def JoinChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LeaveChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetChannels(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOnlineUsers(self, request, context):
        """User Management
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdatePresence(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadFile(self, request, context):
        """File Sharing
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadFile(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManageUser(self, request, context):
        """Admin Functions
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ManageChannel(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=chat__service__pb2.LoginRequest.FromString,
                    response_serializer=chat__service__pb2.LoginResponse.SerializeToString,
            ),
            'Signup': grpc.unary_unary_rpc_method_handler(
                    servicer.Signup,
                    request_deserializer=chat__service__pb2.SignupRequest.FromString,
                    response_serializer=chat__service__pb2.SignupResponse.SerializeToString,
            ),
            'Logout': grpc.unary_unary_rpc_method_handler(
                    servicer.Logout,
                    request_deserializer=chat__service__pb2.LogoutRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'StreamMessages': grpc.unary_stream_rpc_method_handler(
                    servicer.StreamMessages,
                    request_deserializer=chat__service__pb2.StreamRequest.FromString,
                    response_serializer=chat__service__pb2.MessageEvent.SerializeToString,
            ),
            'PostMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.PostMessage,
                    request_deserializer=chat__service__pb2.PostRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'GetMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetMessages,
                    request_deserializer=chat__service__pb2.GetRequest.FromString,
                    response_serializer=chat__service__pb2.GetResponse.SerializeToString,
            ),
            'SendDirectMessage': grpc.unary_unary_rpc_method_handler(
                    servicer.SendDirectMessage,
                    request_deserializer=chat__service__pb2.DirectMessageRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'GetDirectMessages': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDirectMessages,
                    request_deserializer=chat__service__pb2.GetDirectMessagesRequest.FromString,
                    response_serializer=chat__service__pb2.DirectMessageResponse.SerializeToString,
            ),
            'ListConversations': grpc.unary_unary_rpc_method_handler(
                    servicer.ListConversations,
                    request_deserializer=chat__service__pb2.ListConversationsRequest.FromString,
                    response_serializer=chat__service__pb2.ConversationsResponse.SerializeToString,
            ),
            'CreateChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateChannel,
                    request_deserializer=chat__service__pb2.CreateChannelRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'JoinChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.JoinChannel,
                    request_deserializer=chat__service__pb2.JoinChannelRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'LeaveChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.LeaveChannel,
                    request_deserializer=chat__service__pb2.LeaveChannelRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'GetChannels': grpc.unary_unary_rpc_method_handler(
                    servicer.GetChannels,
                    request_deserializer=chat__service__pb2.GetChannelsRequest.FromString,
                    response_serializer=chat__service__pb2.ChannelListResponse.SerializeToString,
            ),
            'GetOnlineUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOnlineUsers,
                    request_deserializer=chat__service__pb2.GetOnlineUsersRequest.FromString,
                    response_serializer=chat__service__pb2.UserListResponse.SerializeToString,
            ),
            'UpdatePresence': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdatePresence,
                    request_deserializer=chat__service__pb2.UpdatePresenceRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'UploadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadFile,
                    request_deserializer=chat__service__pb2.FileUploadRequest.FromString,
                    response_serializer=chat__service__pb2.FileUploadResponse.SerializeToString,
            ),
            'DownloadFile': grpc.unary_unary_rpc_method_handler(
                    servicer.DownloadFile,
                    request_deserializer=chat__service__pb2.FileDownloadRequest.FromString,
                    response_serializer=chat__service__pb2.FileResponse.SerializeToString,
            ),
            'ListFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.ListFiles,
                    request_deserializer=chat__service__pb2.ListFilesRequest.FromString,
                    response_serializer=chat__service__pb2.FileListResponse.SerializeToString,
            ),
            'ManageUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ManageUser,
                    request_deserializer=chat__service__pb2.ManageUserRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
            'ManageChannel': grpc.unary_unary_rpc_method_handler(
                    servicer.ManageChannel,
                    request_deserializer=chat__service__pb2.ManageChannelRequest.FromString,
                    response_serializer=chat__service__pb2.StatusResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat.ChatService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ChatService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/Login',
            chat__service__pb2.LoginRequest.SerializeToString,
            chat__service__pb2.LoginResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Signup(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/Signup',
            chat__service__pb2.SignupRequest.SerializeToString,
            chat__service__pb2.SignupResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Logout(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/Logout',
            chat__service__pb2.LogoutRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StreamMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/chat.ChatService/StreamMessages',
            chat__service__pb2.StreamRequest.SerializeToString,
            chat__service__pb2.MessageEvent.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PostMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/PostMessage',
            chat__service__pb2.PostRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetMessages',
            chat__service__pb2.GetRequest.SerializeToString,
            chat__service__pb2.GetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendDirectMessage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/SendDirectMessage',
            chat__service__pb2.DirectMessageRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDirectMessages(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetDirectMessages',
            chat__service__pb2.GetDirectMessagesRequest.SerializeToString,
            chat__service__pb2.DirectMessageResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListConversations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ListConversations',
            chat__service__pb2.ListConversationsRequest.SerializeToString,
            chat__service__pb2.ConversationsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/CreateChannel',
            chat__service__pb2.CreateChannelRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def JoinChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/JoinChannel',
            chat__service__pb2.JoinChannelRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LeaveChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/LeaveChannel',
            chat__service__pb2.LeaveChannelRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetChannels(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetChannels',
            chat__service__pb2.GetChannelsRequest.SerializeToString,
            chat__service__pb2.ChannelListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOnlineUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/GetOnlineUsers',
            chat__service__pb2.GetOnlineUsersRequest.SerializeToString,
            chat__service__pb2.UserListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdatePresence(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/UpdatePresence',
            chat__service__pb2.UpdatePresenceRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/UploadFile',
            chat__service__pb2.FileUploadRequest.SerializeToString,
            chat__service__pb2.FileUploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DownloadFile(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/DownloadFile',
            chat__service__pb2.FileDownloadRequest.SerializeToString,
            chat__service__pb2.FileResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ListFiles',
            chat__service__pb2.ListFilesRequest.SerializeToString,
            chat__service__pb2.FileListResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManageUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ManageUser',
            chat__service__pb2.ManageUserRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ManageChannel(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/chat.ChatService/ManageChannel',
            chat__service__pb2.ManageChannelRequest.SerializeToString,
            chat__service__pb2.StatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
